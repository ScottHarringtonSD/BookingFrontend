@model BookingAvailabilityModel

@{
    DateOnly currentMonth = new DateOnly(Model.Year, Model.Month, 1);
    DateOnly nextMonthDate = currentMonth.AddMonths(1);
    DateOnly previousMonthDate = currentMonth.AddMonths(-1);


    int previousMonth = previousMonthDate.Month;
    int previousYear = previousMonthDate.Year;

    int nextMonth = nextMonthDate.Month;
    int nextYear = nextMonthDate.Year;


    int monthLength = 31;

    if (new[] {9, 4, 6, 11}.Contains(Model.Month)){
        monthLength = 30;
    }
    else if(Model.Month == 2){
        monthLength = 28;
    }
}

<div class="text-center">
@if(TempData["Error"] != null){

<div class="row pt-3">
    <div class="alert alert-danger pt-3" role="alert">
    @TempData["Error"]
    </div>
</div>
}
</div>



<div class="text-center">
    <h2>Available Dates for: </h2>
</div>
<div class="text-center">
    
    <h3>
        <a class="btn btn-primary" asp-controller="Booking" asp-action="BookingAvailability" asp-route-year=@previousYear asp-route-month=@previousMonth>&#8592;</a>
    @Model.Month/@Model.Year
     <a class="btn btn-primary" asp-controller="Booking" asp-action="BookingAvailability" asp-route-year=@nextYear asp-route-month=@nextMonth>&#8594;</a>
    </h3>
   
</div>

<div class="text-center">
    <h6>

    Key: Green = Fully Available, Yellow = Partially Booked, Red = Fully Booked. Hover over the dates to see which rooms are available!
    </h6>
</div>




<div class="row justify-content-center g-0">
    <div class="col-sm-1"></div>

    @{ for(int j = 0; j < 7; j++){
    <div class="col">
        @{ 
                for(int i = j; i < monthLength; i = i + 7){
                    if(Model.Availabilities[i,0] == null && Model.Availabilities[i,1] == null){
                        <div class="row calendar-margin">
                            <div class="bg-success square border border-dark"  data-bs-toggle="tooltip" data-bs-placement="top" title="Both Guest and Front Room are available!"> @(i+1)</div>
                        </div>
                    }
                    else if(Model.Availabilities[i,0] != null && Model.Availabilities[i,1] != null) {
                        <div class="row calendar-margin">
                        <div class="bg-danger square border border-dark" data-bs-toggle="tooltip" data-bs-placement="top" title="Guest room booked by @Model.Availabilities[i,0] and Front room booked by @Model.Availabilities[i,1]">@(i+1)</div>
                        </div>
                    }
                    else if(Model.Availabilities[i,0] != null || Model.Availabilities[i,1] != null){
                        if(Model.Availabilities[i,0] != null){
                            <div class="row calendar-margin">
                            <div class="bg-warning square border border-dark" data-bs-toggle="tooltip" data-bs-placement="top" title="Guest room booked by @Model.Availabilities[i,0]">@(i+1)</div>
                            </div>
                        }
                        else{
                            <div class="row calendar-margin">
                            <div class="bg-warning square border border-dark" data-bs-toggle="tooltip" data-bs-placement="top" title="Front room booked by @Model.Availabilities[i,1]">@(i+1)</div>
                            </div>
                        }
                
                    } 
                }
        }

    </div>
        }
    }
    <div class="col-sm-1"></div>


    </div>


   